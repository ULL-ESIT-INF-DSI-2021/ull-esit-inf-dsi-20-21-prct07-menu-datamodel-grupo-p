{"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/alimento.ts":{"path":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/alimento.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":18,"column":8},"end":{"line":18,"column":45}},"3":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":33}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":27}},"8":{"start":{"line":30,"column":8},"end":{"line":30,"column":35}},"9":{"start":{"line":37,"column":8},"end":{"line":37,"column":27}},"10":{"start":{"line":44,"column":8},"end":{"line":44,"column":27}},"11":{"start":{"line":51,"column":8},"end":{"line":51,"column":29}},"12":{"start":{"line":58,"column":8},"end":{"line":58,"column":27}},"13":{"start":{"line":65,"column":8},"end":{"line":65,"column":26}},"14":{"start":{"line":68,"column":0},"end":{"line":68,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":73},"end":{"line":24,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":24},"end":{"line":31,"column":5}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":16},"end":{"line":38,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":16},"end":{"line":45,"column":5}},"line":43},"4":{"name":"(anonymous_4)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":18},"end":{"line":52,"column":5}},"line":50},"5":{"name":"(anonymous_5)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":25},"end":{"line":59,"column":5}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":15},"end":{"line":66,"column":5}},"line":64}},"branchMap":{},"s":{"0":1,"1":1,"2":42,"3":42,"4":42,"5":42,"6":42,"7":42,"8":1,"9":58,"10":1,"11":1,"12":415,"13":13,"14":1},"f":{"0":42,"1":1,"2":58,"3":1,"4":1,"5":415,"6":13},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/alimento.ts","sources":["/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/alimento.ts"],"names":[],"mappings":";;;AAkBA;;GAEG;AACH,MAAa,QAAQ;IAEnB;;;;;;;;OAQG;IACH,YAAoB,cAAsB,EAAU,MAAc,EAAU,MAAc,EAClF,QAAgB,EAAU,MAAuB,EAAU,KAAY;QAD3D,mBAAc,GAAd,cAAc,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAQ;QAClF,aAAQ,GAAR,QAAQ,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAO;IAAG,CAAC;IAEnF;;;OAGG;IACH,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,kBAAkB;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CACF;AA7DD,4BA6DC","sourcesContent":["/**\n * Tipo de datos Macronutrientes. Servirá como composición nutricional de los alimentos.\n * @param carbohidratos Cantidad de hidratos de carbono por cada 100 gr que posee el alimento.\n * @param proteinas Cantidad de proteínas por cada 100 gr que posee el alimento.\n * @param lipidos Cantidad de lípidos por cada 100 gr de carbono que posee el alimento.\n */\nexport type Macronutrientes = {\n  carbohidratos: number,\n  proteinas: number,\n  lipidos: number\n}\n\n/**\n * Tipo de datos Grupo. Es el grupo de alimentos al que pertenece el alimento.\n */\nexport type Grupo = 'CARNES' | 'PESCADOS' | 'HUEVOS' | 'TOFU' | 'FRUTOS_SECOS' | 'SEMILLAS' | 'LEGUMBRES' |\n'VERDURAS' | 'HORTALIZAS' | 'LACTEOS' | 'CEREALES' | 'FRUTAS' | 'PROCESADOS';\n\n/**\n * Esta es la clase Alimento.\n */\nexport class Alimento {\n  \n  /**\n   * Constructor de la clase Alimento\n   * @param nombreAlimento Nombre del alimento en cuestión.\n   * @param precio Precio del alimento.\n   * @param origen Localización de origen del alimento (país, ciudad, etc.).\n   * @param calorias Kilocalorías por 100 gramos de dicho alimento.\n   * @param macros Los macronutrientes que posee el alimento por cada 100 gr(carbohidratos, protínas y lípidos).\n   * @param grupo Grupo de alimentos al que pertenece el alimento.\n   */\n  constructor(private nombreAlimento: string, private precio: number, private origen: string,\n  private calorias: number, private macros: Macronutrientes, private grupo: Grupo) {}\n\n  /**\n   * Obtiene el nombre del alimento.\n   * @returns Nombre del alimento.\n   */\n  getNombreAlimento() {\n    return this.nombreAlimento;\n  }\n\n  /**\n   * Obtiene el precio por Kg (en euros).\n   * @returns Precio del alimento por Kg.\n   */\n  getPrecio() {\n    return this.precio;\n  }\n\n  /**\n   * Obtiene el origen del alimento.\n   * @returns Origen del alimento.\n   */\n  getOrigen() {\n    return this.origen;\n  }\n\n  /**\n   * Obtiene kilocalorías (kcal) por 100 gr de dicho alimento.\n   * @returns kcal del alimento.\n   */\n  getCalorias() {\n    return this.calorias;\n  }\n\n  /**\n   * Obtiene los macronutrientes del alimento por 100 gr.\n   * @returns Macronutrientes del alimento.\n   */\n  getMacronutrientes() {\n    return this.macros;\n  }\n\n  /**\n   * Obtiene el grupo del alimento\n   * @returns Grupo del alimento.\n   */\n  getGrupo(): Grupo {\n    return this.grupo;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc32dd7d157df51c34189b34c0bae441bc4dc862","contentHash":"3bbf0d499b7f454836f6d5a7b572810da1e1cd4f5b3c52a67a8ded98f9afd362"},"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/plato.ts":{"path":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/plato.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":39}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":35}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":24}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":67}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":32}},"9":{"start":{"line":33,"column":8},"end":{"line":33,"column":30}},"10":{"start":{"line":40,"column":8},"end":{"line":40,"column":30}},"11":{"start":{"line":47,"column":8},"end":{"line":47,"column":42}},"12":{"start":{"line":54,"column":8},"end":{"line":54,"column":27}},"13":{"start":{"line":57,"column":8},"end":{"line":57,"column":63}},"14":{"start":{"line":60,"column":18},"end":{"line":60,"column":20}},"15":{"start":{"line":61,"column":20},"end":{"line":61,"column":72}},"16":{"start":{"line":62,"column":8},"end":{"line":67,"column":9}},"17":{"start":{"line":63,"column":12},"end":{"line":63,"column":76}},"18":{"start":{"line":66,"column":12},"end":{"line":66,"column":44}},"19":{"start":{"line":74,"column":24},"end":{"line":74,"column":70}},"20":{"start":{"line":75,"column":8},"end":{"line":80,"column":11}},"21":{"start":{"line":77,"column":12},"end":{"line":77,"column":108}},"22":{"start":{"line":78,"column":12},"end":{"line":78,"column":96}},"23":{"start":{"line":79,"column":12},"end":{"line":79,"column":100}},"24":{"start":{"line":81,"column":8},"end":{"line":81,"column":25}},"25":{"start":{"line":88,"column":24},"end":{"line":88,"column":25}},"26":{"start":{"line":89,"column":8},"end":{"line":93,"column":11}},"27":{"start":{"line":90,"column":27},"end":{"line":90,"column":50}},"28":{"start":{"line":91,"column":32},"end":{"line":91,"column":61}},"29":{"start":{"line":92,"column":12},"end":{"line":92,"column":37}},"30":{"start":{"line":94,"column":8},"end":{"line":94,"column":29}},"31":{"start":{"line":102,"column":32},"end":{"line":102,"column":68}},"32":{"start":{"line":103,"column":8},"end":{"line":189,"column":11}},"33":{"start":{"line":104,"column":26},"end":{"line":104,"column":48}},"34":{"start":{"line":105,"column":12},"end":{"line":188,"column":13}},"35":{"start":{"line":107,"column":20},"end":{"line":107,"column":43}},"36":{"start":{"line":108,"column":20},"end":{"line":110,"column":21}},"37":{"start":{"line":109,"column":24},"end":{"line":109,"column":40}},"38":{"start":{"line":111,"column":20},"end":{"line":111,"column":26}},"39":{"start":{"line":113,"column":20},"end":{"line":113,"column":43}},"40":{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},"41":{"start":{"line":115,"column":24},"end":{"line":115,"column":42}},"42":{"start":{"line":117,"column":20},"end":{"line":117,"column":26}},"43":{"start":{"line":119,"column":20},"end":{"line":119,"column":43}},"44":{"start":{"line":120,"column":20},"end":{"line":122,"column":21}},"45":{"start":{"line":121,"column":24},"end":{"line":121,"column":40}},"46":{"start":{"line":123,"column":20},"end":{"line":123,"column":26}},"47":{"start":{"line":125,"column":20},"end":{"line":125,"column":43}},"48":{"start":{"line":126,"column":20},"end":{"line":128,"column":21}},"49":{"start":{"line":127,"column":24},"end":{"line":127,"column":38}},"50":{"start":{"line":129,"column":20},"end":{"line":129,"column":26}},"51":{"start":{"line":131,"column":20},"end":{"line":131,"column":43}},"52":{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},"53":{"start":{"line":133,"column":24},"end":{"line":133,"column":46}},"54":{"start":{"line":135,"column":20},"end":{"line":135,"column":26}},"55":{"start":{"line":137,"column":20},"end":{"line":137,"column":43}},"56":{"start":{"line":138,"column":20},"end":{"line":140,"column":21}},"57":{"start":{"line":139,"column":24},"end":{"line":139,"column":42}},"58":{"start":{"line":141,"column":20},"end":{"line":141,"column":26}},"59":{"start":{"line":143,"column":20},"end":{"line":143,"column":43}},"60":{"start":{"line":144,"column":20},"end":{"line":146,"column":21}},"61":{"start":{"line":145,"column":24},"end":{"line":145,"column":43}},"62":{"start":{"line":147,"column":20},"end":{"line":147,"column":26}},"63":{"start":{"line":149,"column":20},"end":{"line":149,"column":43}},"64":{"start":{"line":150,"column":20},"end":{"line":152,"column":21}},"65":{"start":{"line":151,"column":24},"end":{"line":151,"column":42}},"66":{"start":{"line":153,"column":20},"end":{"line":153,"column":26}},"67":{"start":{"line":155,"column":20},"end":{"line":155,"column":43}},"68":{"start":{"line":156,"column":20},"end":{"line":158,"column":21}},"69":{"start":{"line":157,"column":24},"end":{"line":157,"column":44}},"70":{"start":{"line":159,"column":20},"end":{"line":159,"column":26}},"71":{"start":{"line":161,"column":20},"end":{"line":161,"column":43}},"72":{"start":{"line":162,"column":20},"end":{"line":164,"column":21}},"73":{"start":{"line":163,"column":24},"end":{"line":163,"column":41}},"74":{"start":{"line":165,"column":20},"end":{"line":165,"column":26}},"75":{"start":{"line":167,"column":20},"end":{"line":167,"column":44}},"76":{"start":{"line":168,"column":20},"end":{"line":170,"column":21}},"77":{"start":{"line":169,"column":24},"end":{"line":169,"column":42}},"78":{"start":{"line":171,"column":20},"end":{"line":171,"column":26}},"79":{"start":{"line":173,"column":20},"end":{"line":173,"column":44}},"80":{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},"81":{"start":{"line":175,"column":24},"end":{"line":175,"column":40}},"82":{"start":{"line":177,"column":20},"end":{"line":177,"column":26}},"83":{"start":{"line":179,"column":20},"end":{"line":179,"column":44}},"84":{"start":{"line":180,"column":20},"end":{"line":182,"column":21}},"85":{"start":{"line":181,"column":24},"end":{"line":181,"column":44}},"86":{"start":{"line":183,"column":20},"end":{"line":183,"column":26}},"87":{"start":{"line":190,"column":33},"end":{"line":190,"column":99}},"88":{"start":{"line":191,"column":23},"end":{"line":191,"column":70}},"89":{"start":{"line":192,"column":8},"end":{"line":197,"column":9}},"90":{"start":{"line":192,"column":21},"end":{"line":192,"column":22}},"91":{"start":{"line":193,"column":12},"end":{"line":196,"column":13}},"92":{"start":{"line":194,"column":16},"end":{"line":194,"column":58}},"93":{"start":{"line":195,"column":16},"end":{"line":195,"column":29}},"94":{"start":{"line":198,"column":8},"end":{"line":203,"column":9}},"95":{"start":{"line":198,"column":21},"end":{"line":198,"column":29}},"96":{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},"97":{"start":{"line":200,"column":16},"end":{"line":200,"column":58}},"98":{"start":{"line":201,"column":16},"end":{"line":201,"column":29}},"99":{"start":{"line":204,"column":26},"end":{"line":204,"column":180}},"100":{"start":{"line":205,"column":8},"end":{"line":205,"column":37}},"101":{"start":{"line":208,"column":0},"end":{"line":208,"column":22}},"102":{"start":{"line":210,"column":4},"end":{"line":210,"column":52}},"103":{"start":{"line":211,"column":27},"end":{"line":211,"column":29}},"104":{"start":{"line":212,"column":4},"end":{"line":214,"column":7}},"105":{"start":{"line":213,"column":8},"end":{"line":213,"column":66}},"106":{"start":{"line":215,"column":21},"end":{"line":215,"column":23}},"107":{"start":{"line":216,"column":4},"end":{"line":216,"column":98}},"108":{"start":{"line":217,"column":4},"end":{"line":217,"column":89}},"109":{"start":{"line":218,"column":4},"end":{"line":218,"column":93}},"110":{"start":{"line":219,"column":4},"end":{"line":219,"column":53}},"111":{"start":{"line":220,"column":4},"end":{"line":220,"column":58}},"112":{"start":{"line":221,"column":4},"end":{"line":221,"column":75}},"113":{"start":{"line":222,"column":4},"end":{"line":222,"column":81}},"114":{"start":{"line":224,"column":0},"end":{"line":224,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":51},"end":{"line":20,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":21},"end":{"line":27,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":19},"end":{"line":34,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":19},"end":{"line":41,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":30},"end":{"line":48,"column":5}},"line":46},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":16},"end":{"line":55,"column":5}},"line":53},"6":{"name":"(anonymous_6)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":54},"end":{"line":58,"column":5}},"line":56},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":47},"end":{"line":68,"column":5}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":29},"end":{"line":82,"column":5}},"line":73},"9":{"name":"(anonymous_9)","decl":{"start":{"line":75,"column":31},"end":{"line":75,"column":32}},"loc":{"start":{"line":75,"column":45},"end":{"line":80,"column":9}},"line":75},"10":{"name":"(anonymous_10)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":20},"end":{"line":95,"column":5}},"line":87},"11":{"name":"(anonymous_11)","decl":{"start":{"line":89,"column":31},"end":{"line":89,"column":32}},"loc":{"start":{"line":89,"column":45},"end":{"line":93,"column":9}},"line":89},"12":{"name":"(anonymous_12)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":31},"end":{"line":206,"column":5}},"line":101},"13":{"name":"(anonymous_13)","decl":{"start":{"line":103,"column":31},"end":{"line":103,"column":32}},"loc":{"start":{"line":103,"column":45},"end":{"line":189,"column":9}},"line":103},"14":{"name":"printPlato","decl":{"start":{"line":209,"column":9},"end":{"line":209,"column":19}},"loc":{"start":{"line":209,"column":27},"end":{"line":223,"column":1}},"line":209},"15":{"name":"(anonymous_15)","decl":{"start":{"line":212,"column":33},"end":{"line":212,"column":34}},"loc":{"start":{"line":212,"column":52},"end":{"line":214,"column":5}},"line":212}},"branchMap":{"0":{"loc":{"start":{"line":62,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":67,"column":9}},{"start":{"line":62,"column":8},"end":{"line":67,"column":9}}],"line":62},"1":{"loc":{"start":{"line":105,"column":12},"end":{"line":188,"column":13}},"type":"switch","locations":[{"start":{"line":106,"column":16},"end":{"line":111,"column":26}},{"start":{"line":112,"column":16},"end":{"line":117,"column":26}},{"start":{"line":118,"column":16},"end":{"line":123,"column":26}},{"start":{"line":124,"column":16},"end":{"line":129,"column":26}},{"start":{"line":130,"column":16},"end":{"line":135,"column":26}},{"start":{"line":136,"column":16},"end":{"line":141,"column":26}},{"start":{"line":142,"column":16},"end":{"line":147,"column":26}},{"start":{"line":148,"column":16},"end":{"line":153,"column":26}},{"start":{"line":154,"column":16},"end":{"line":159,"column":26}},{"start":{"line":160,"column":16},"end":{"line":165,"column":26}},{"start":{"line":166,"column":16},"end":{"line":171,"column":26}},{"start":{"line":172,"column":16},"end":{"line":177,"column":26}},{"start":{"line":178,"column":16},"end":{"line":183,"column":26}}],"line":105},"2":{"loc":{"start":{"line":108,"column":20},"end":{"line":110,"column":21}},"type":"if","locations":[{"start":{"line":108,"column":20},"end":{"line":110,"column":21}},{"start":{"line":108,"column":20},"end":{"line":110,"column":21}}],"line":108},"3":{"loc":{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},"type":"if","locations":[{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},{"start":{"line":114,"column":20},"end":{"line":116,"column":21}}],"line":114},"4":{"loc":{"start":{"line":120,"column":20},"end":{"line":122,"column":21}},"type":"if","locations":[{"start":{"line":120,"column":20},"end":{"line":122,"column":21}},{"start":{"line":120,"column":20},"end":{"line":122,"column":21}}],"line":120},"5":{"loc":{"start":{"line":126,"column":20},"end":{"line":128,"column":21}},"type":"if","locations":[{"start":{"line":126,"column":20},"end":{"line":128,"column":21}},{"start":{"line":126,"column":20},"end":{"line":128,"column":21}}],"line":126},"6":{"loc":{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},"type":"if","locations":[{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},{"start":{"line":132,"column":20},"end":{"line":134,"column":21}}],"line":132},"7":{"loc":{"start":{"line":138,"column":20},"end":{"line":140,"column":21}},"type":"if","locations":[{"start":{"line":138,"column":20},"end":{"line":140,"column":21}},{"start":{"line":138,"column":20},"end":{"line":140,"column":21}}],"line":138},"8":{"loc":{"start":{"line":144,"column":20},"end":{"line":146,"column":21}},"type":"if","locations":[{"start":{"line":144,"column":20},"end":{"line":146,"column":21}},{"start":{"line":144,"column":20},"end":{"line":146,"column":21}}],"line":144},"9":{"loc":{"start":{"line":150,"column":20},"end":{"line":152,"column":21}},"type":"if","locations":[{"start":{"line":150,"column":20},"end":{"line":152,"column":21}},{"start":{"line":150,"column":20},"end":{"line":152,"column":21}}],"line":150},"10":{"loc":{"start":{"line":156,"column":20},"end":{"line":158,"column":21}},"type":"if","locations":[{"start":{"line":156,"column":20},"end":{"line":158,"column":21}},{"start":{"line":156,"column":20},"end":{"line":158,"column":21}}],"line":156},"11":{"loc":{"start":{"line":162,"column":20},"end":{"line":164,"column":21}},"type":"if","locations":[{"start":{"line":162,"column":20},"end":{"line":164,"column":21}},{"start":{"line":162,"column":20},"end":{"line":164,"column":21}}],"line":162},"12":{"loc":{"start":{"line":168,"column":20},"end":{"line":170,"column":21}},"type":"if","locations":[{"start":{"line":168,"column":20},"end":{"line":170,"column":21}},{"start":{"line":168,"column":20},"end":{"line":170,"column":21}}],"line":168},"13":{"loc":{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},"type":"if","locations":[{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},{"start":{"line":174,"column":20},"end":{"line":176,"column":21}}],"line":174},"14":{"loc":{"start":{"line":180,"column":20},"end":{"line":182,"column":21}},"type":"if","locations":[{"start":{"line":180,"column":20},"end":{"line":182,"column":21}},{"start":{"line":180,"column":20},"end":{"line":182,"column":21}}],"line":180},"15":{"loc":{"start":{"line":193,"column":12},"end":{"line":196,"column":13}},"type":"if","locations":[{"start":{"line":193,"column":12},"end":{"line":196,"column":13}},{"start":{"line":193,"column":12},"end":{"line":196,"column":13}}],"line":193},"16":{"loc":{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":199,"column":12},"end":{"line":202,"column":13}},{"start":{"line":199,"column":12},"end":{"line":202,"column":13}}],"line":199}},"s":{"0":1,"1":1,"2":17,"3":17,"4":17,"5":17,"6":17,"7":17,"8":23,"9":4,"10":22,"11":1,"12":4,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":44,"20":44,"21":138,"22":138,"23":138,"24":44,"25":17,"26":17,"27":57,"28":57,"29":57,"30":17,"31":1,"32":1,"33":3,"34":3,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":1,"77":0,"78":1,"79":1,"80":1,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":1,"90":1,"91":0,"92":0,"93":0,"94":1,"95":1,"96":12,"97":1,"98":1,"99":1,"100":1,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1},"f":{"0":17,"1":23,"2":4,"3":22,"4":1,"5":4,"6":0,"7":0,"8":44,"9":138,"10":17,"11":57,"12":1,"13":3,"14":0,"15":0},"b":{"0":[0,0],"1":[0,0,1,0,0,0,0,0,0,0,1,1,0],"2":[0,0],"3":[0,0],"4":[0,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,1],"13":[0,1],"14":[0,0],"15":[0,0],"16":[1,11]},"inputSourceMap":{"version":3,"file":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/plato.ts","sources":["/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/plato.ts"],"names":[],"mappings":";;;AAUA;;GAEG;AACH,MAAa,KAAK;IAQhB,YAAoB,WAAmB,EAAU,SAA+B,EACtE,SAAoB;QADV,gBAAW,GAAX,WAAW,CAAQ;QAAU,cAAS,GAAT,SAAS,CAAsB;QACtE,cAAS,GAAT,SAAS,CAAW;QAR9B;;;;WAIG;QACK,WAAM,GAAW,CAAC,CAAC;QAIvB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC3D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IACvC,CAAC;IAED;;;OAGG;IACH,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,uBAAuB;QACrB,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,gBAAgB,CAAC,aAAuB,EAAE,gBAAwB;QAChE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,cAAc,CAAC,QAAkB,EAAE,gBAAwB;QACzD,IAAI,GAAG,GAAW,CAAC,CAAC,CAAC;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC,CAAC;QACjE,IAAG,KAAK,IAAI,CAAC,CAAC,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;SACjE;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACjC;IACH,CAAC;IAED;;;OAGG;IACH,sBAAsB;QACpB,IAAI,SAAS,GAAoB,EAAC,aAAa,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClC,gDAAgD;YAChD,SAAS,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YAChG,SAAS,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACpF,SAAS,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC1F,CAAC,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,aAAa;QACX,IAAI,SAAS,GAAW,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClC,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;YACvC,MAAM,WAAW,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClD,SAAS,IAAI,WAAW,CAAC;QAC3B,CAAC,CAAC,CAAA;QACF,OAAO,SAAS,GAAG,CAAC,CAAC,CAAC,2IAA2I;IACnK,CAAC;IAGD;;;;OAIG;IACH,wBAAwB;QACtB,IAAI,iBAAiB,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClC,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACrC,QAAQ,KAAK,EAAE;gBACb,KAAK,QAAQ;oBACX,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,QAAQ,CAAC;qBACjB;oBACD,MAAM;gBACR,KAAK,UAAU;oBACb,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,UAAU,CAAC;qBACnB;oBACD,MAAM;gBACR,KAAK,QAAQ;oBACX,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,QAAQ,CAAC;qBACjB;oBACD,MAAM;gBACR,KAAK,MAAM;oBACT,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,MAAM,CAAC;qBACf;oBACD,MAAM;gBACR,KAAK,cAAc;oBACjB,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,cAAc,CAAC;qBACvB;oBACD,MAAM;gBACR,KAAK,UAAU;oBACb,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,UAAU,CAAC;qBACnB;oBACD,MAAM;gBACR,KAAK,WAAW;oBACd,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,WAAW,CAAC;qBACpB;oBACD,MAAM;gBACR,KAAK,UAAU;oBACb,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,UAAU,CAAC;qBACnB;oBACD,MAAM;gBACR,KAAK,YAAY;oBACf,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,YAAY,CAAC;qBACrB;oBACD,MAAM;gBACR,KAAK,SAAS;oBACZ,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,OAAO,SAAS,CAAC;qBAClB;oBACD,MAAM;gBACR,KAAK,UAAU;oBACb,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC;oBACxB,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtD,OAAO,UAAU,CAAC;qBACnB;oBACD,MAAM;gBACR,KAAK,QAAQ;oBACX,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC;oBACxB,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtD,OAAO,QAAQ,CAAC;qBACjB;oBACD,MAAM;gBACR,KAAK,YAAY;oBACf,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC;oBACxB,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtD,OAAO,YAAY,CAAC;qBACrB;oBACD,MAAM;gBACR,UAAU;gBACR,8DAA8D;gBAC9D,iBAAiB;gBACjB,QAAQ;aACX;QACH,CAAC,CAAC,CAAC;QACH,IAAI,kBAAkB,GAAG,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAG,6CAA6C;YACjF,IAAI,iBAAiB,CAAC,CAAC,CAAC,GAAG,kBAAkB,EAAE;gBAC7C,kBAAkB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAC1C,QAAQ,GAAG,CAAC,CAAC;aACd;SACF;QACD,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,+CAA+C;YACzG,IAAI,iBAAiB,CAAC,CAAC,CAAC,GAAG,kBAAkB,EAAE;gBAC7C,kBAAkB,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBAC1C,QAAQ,GAAG,CAAC,CAAC;aACd;SACF;QACD,IAAI,WAAW,GAAa,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QACvL,OAAO,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;CACF;AAjND,sBAiNC;AAED,SAAgB,UAAU,CAAC,KAAY;IACrC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;IAChD,IAAI,gBAAgB,GAAW,EAAE,CAAC;IAClC,KAAK,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,UAAS,OAAO;QAC3C,gBAAgB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC;IAC5D,CAAC,CAAC,CAAC;IACH,IAAI,UAAU,GAAW,EAAE,CAAC;IAC5B,UAAU,IAAI,iBAAiB,GAAG,CAAC,CACnC,KAAK,CAAC,uBAAuB,EAAE,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1D,UAAU,IAAI,cAAc,GAAG,CAAC,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrF,UAAU,IAAI,gBAAgB,GAAG,CAAC,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzF,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAI,gBAAgB,CAAC,CAAC;IAClD,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,UAAU,CAAC,CAAC;IACtD,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,wBAAwB,EAAE,CAAC,CAAC;IACvE,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,CAAC;AAfD,gCAeC","sourcesContent":["import { Alimento } from \"./alimento\";\nimport { Macronutrientes } from \"./alimento\"\nimport { Grupo } from \"./alimento\";\n\n/**\n * Tipo de datos Categoria. Existen 4 categorías posibles: Entrante, \n * primer plato, segundo plato o postre\n */\nexport type Categoria = 'ENTRANTE' | 'PRIMERO' | 'SEGUNDO' | 'POSTRE';\n\n/*\n * Esta es la clase Plato.\n */\nexport class Plato {\n  /**\n   * @param nombrePlato Nombre del plato.\n   * @param alimentos Array de pares [alimento, cantidad (en gramos)].\n   * @param categoria Categoría a la que pertenece el plato.\n   */\n  private precio: number = 0;\n  private macronutrientes_plato: Macronutrientes;\n  constructor(private nombrePlato: string, private alimentos: [Alimento, number][],\n    private categoria: Categoria) {\n      this.macronutrientes_plato = this.calculoMacronutrientes();\n      this.precio = this.calculoPrecio();\n  }\n\n  /**\n   * Obtiene el nombre del alimento.\n   * @returns Nombre del alimento.\n   */\n  getNombrePlato() {\n    return this.nombrePlato;\n  }\n\n  /**\n   * Obtiene la lista de alimentos y/o ingredientes que lo componen.\n   * @returns Lista de alimentos.\n   */\n  getAlimentos() {\n    return this.alimentos;\n  }\n\n  /**\n   * Obtiene el nombre de la categoría del plato.\n   * @returns Nombre de la categoría del plato.\n   */\n  getCategoria() {\n    return this.categoria;\n  }\n\n  /**\n   * Obtiene los macronutrientes en conjunto del plato.\n   * @returns Cantidad de macronutrientes del plato.\n   */\n  getMacronutrientesPlato() {\n    return this.macronutrientes_plato;\n  }\n\n  /**\n   * Obtiene el precio del plato en función a los ingredientes utilizados y su cantidad.\n   * @returns Precio del plato.\n   */\n  getPrecio() {\n    return this.precio;\n  }\n\n  addNuevoAlimento(nuevoAlimento: Alimento, cantidadAlimento: number) {\n    this.alimentos.push([nuevoAlimento, cantidadAlimento]);\n  }\n\n  deleteAlimento(alimento: Alimento, cantidadAlimento: number): void {\n    let pos: number = -1;\n    let index = this.alimentos.indexOf([alimento, cantidadAlimento]);\n    if(index == -1) {\n      console.log('El plato no se encuentra en el menu. Lo sentimos');\n    } else {\n      this.alimentos.splice(index, 1);\n    }\n  }\n\n  /**\n   * Realiza el cálculo de los macronutrientes del plato en base a la cantidad de cada alimento.\n   * @returns Macronutrientes del plato.\n   */\n  calculoMacronutrientes() {\n    let resultado: Macronutrientes = {carbohidratos: 0, proteinas: 0, lipidos: 0};\n    this.alimentos.forEach((elemento) => {\n      // Calculamos en función a la cantidad utilizada\n      resultado.carbohidratos += (elemento[0].getMacronutrientes().carbohidratos * elemento[1]) / 100;\n      resultado.lipidos += (elemento[0].getMacronutrientes().lipidos * elemento[1]) / 100;\n      resultado.proteinas += (elemento[0].getMacronutrientes().proteinas * elemento[1]) / 100;\n    });\n    return resultado;\n  }\n\n  /**\n   * Realiza el cálculo del precio en función a la cantidad utilizada de cada alimento.\n   * @return Precio (Euros).\n   */ \n  calculoPrecio(): number {\n    let sumatorio: number = 0;\n    this.alimentos.forEach((elemento) => {\n      const precio = elemento[0].getPrecio();\n      const precioGramo = (precio / 1000) * elemento[1];\n      sumatorio += precioGramo;\n    })\n    return sumatorio + 3; // El +3 es el valor añadido de crear el Plato. Si solo costase se valor justo (al por mayor) de los ingredientes, no costarían casi nada. \n  }\n\n  \n  /**\n   * Calcula el grupo de alimentos predominante, es decir, el grupo de alimentos que \n   * más aparece entre los ingredientes del plato.\n   * @return El grupo más repetido.\n   */\n  calculoGrupoPredominante() {\n    let contadorAlimentos: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    this.alimentos.forEach((elemento) => {\n      const grupo = elemento[0].getGrupo();\n      switch (grupo) {\n        case 'CARNES':\n          contadorAlimentos[0]++;\n          if (contadorAlimentos[0] >= this.alimentos.length / 2) {\n            return 'CARNES';\n          }\n          break;\n        case 'PESCADOS':\n          contadorAlimentos[1]++;\n          if (contadorAlimentos[1] >= this.alimentos.length / 2) {\n            return 'PESCADOS';\n          }\n          break;\n        case 'HUEVOS':\n          contadorAlimentos[2]++;\n          if (contadorAlimentos[2] >= this.alimentos.length / 2) {\n            return 'HUEVOS';\n          }\n          break;\n        case 'TOFU':\n          contadorAlimentos[3]++;\n          if (contadorAlimentos[3] >= this.alimentos.length / 2) {\n            return 'TOFU';\n          }\n          break;\n        case 'FRUTOS_SECOS':\n          contadorAlimentos[4]++;\n          if (contadorAlimentos[4] >= this.alimentos.length / 2) {\n            return 'FRUTOS_SECOS';\n          }\n          break;\n        case 'SEMILLAS':\n          contadorAlimentos[5]++;\n          if (contadorAlimentos[5] >= this.alimentos.length / 2) {\n            return 'SEMILLAS';\n          }\n          break;\n        case 'LEGUMBRES':\n          contadorAlimentos[6]++;\n          if (contadorAlimentos[6] >= this.alimentos.length / 2) {\n            return 'LEGUMBRES';\n          }\n          break;\n        case 'VERDURAS':\n          contadorAlimentos[7]++;\n          if (contadorAlimentos[7] >= this.alimentos.length / 2) {\n            return 'VERDURAS';\n          }\n          break;\n        case 'HORTALIZAS':\n          contadorAlimentos[8]++;\n          if (contadorAlimentos[8] >= this.alimentos.length / 2) {\n            return 'HORTALIZAS';\n          }\n          break;\n        case 'LACTEOS':\n          contadorAlimentos[9]++;\n          if (contadorAlimentos[9] >= this.alimentos.length / 2) {\n            return 'LACTEOS';\n          }\n          break;\n        case 'CEREALES':\n          contadorAlimentos[10]++;\n          if (contadorAlimentos[10] >= this.alimentos.length / 2) {\n            return 'CEREALES';\n          }\n          break;\n        case 'FRUTAS':\n          contadorAlimentos[11]++;\n          if (contadorAlimentos[11] >= this.alimentos.length / 2) {\n            return 'FRUTAS';\n          }\n          break;\n        case 'PROCESADOS':\n          contadorAlimentos[12]++;\n          if (contadorAlimentos[12] >= this.alimentos.length / 2) {\n            return 'PROCESADOS';\n          }\n          break;\n        //default:\n          //throw new Error(\"Error al calcular el grupo predominante.\");\n          //return 'FALLO';\n          //break;\n      }\n    });\n    let mayorCoincidencias = contadorAlimentos[this.alimentos[0].indexOf(this.alimentos[0][0])];\n    let posicion = this.alimentos[0].indexOf(this.alimentos[0][0]);\n    for (let i = 0; i < posicion; i++) {  // Bucle antes del grupo del primer alimento.\n      if (contadorAlimentos[i] > mayorCoincidencias) {\n        mayorCoincidencias = contadorAlimentos[i];\n        posicion = i;\n      }\n    }\n    for (let i = posicion; i < contadorAlimentos.length; i++) { // Bucle después del grupo del primer alimento.\n      if (contadorAlimentos[i] > mayorCoincidencias) {\n        mayorCoincidencias = contadorAlimentos[i];\n        posicion = i;\n      }\n    }\n    let arrayGrupos: string[] = ['CARNES', 'PESCADOS', 'HUEVOS', 'TOFU', 'FRUTOS_SECOS', 'SEMILLAS', 'LEGUMBRES', 'VERDURAS', 'HORTALIZAS', 'LACTEOS', 'CEREALES', 'FRUTAS', 'PROCESADOS'];\n    return arrayGrupos[posicion];\n  }\n}\n\nexport function printPlato(plato: Plato): void {\n  console.log('Plato: ' + plato.getNombrePlato());\n  let ingredientes_aux: string = '';\n  plato.getAlimentos().forEach(function(element) {\n    ingredientes_aux += element[0].getNombreAlimento() + ', ';\n  });\n  let macros_aux: string = '';\n  macros_aux += 'Carbohidratos: ' + +(\n  plato.getMacronutrientesPlato().carbohidratos).toFixed(3);\n  macros_aux += ' - Lipidos: ' + +(plato.getMacronutrientesPlato().lipidos).toFixed(3);\n  macros_aux += ' - Proteinas: ' + +(plato.getMacronutrientesPlato().proteinas).toFixed(3);\n  console.log('Ingredientes: ' +  ingredientes_aux);\n  console.log('Composición nutricional: ' + macros_aux);\n  console.log('Grupo de alimentos: ' + plato.calculoGrupoPredominante());\n  console.log('Precio unitario del plato: ' + +(plato.getPrecio()).toFixed(2));\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"87ba7af7b55fe09d8f40c8e60be71f76c8bf8a97","contentHash":"3ab7c1a519b8f50a6e391363ddfdd7617447c1654c1dd749700280241f81265e"},"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/menu.ts":{"path":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/menu.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":37}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":39}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":30}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":43}},"8":{"start":{"line":22,"column":8},"end":{"line":24,"column":11}},"9":{"start":{"line":23,"column":12},"end":{"line":23,"column":43}},"10":{"start":{"line":25,"column":29},"end":{"line":25,"column":41}},"11":{"start":{"line":27,"column":8},"end":{"line":41,"column":11}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":52}},"13":{"start":{"line":29,"column":12},"end":{"line":40,"column":13}},"14":{"start":{"line":30,"column":16},"end":{"line":30,"column":38}},"15":{"start":{"line":32,"column":17},"end":{"line":40,"column":13}},"16":{"start":{"line":33,"column":16},"end":{"line":33,"column":38}},"17":{"start":{"line":35,"column":17},"end":{"line":40,"column":13}},"18":{"start":{"line":36,"column":16},"end":{"line":36,"column":38}},"19":{"start":{"line":38,"column":17},"end":{"line":40,"column":13}},"20":{"start":{"line":39,"column":16},"end":{"line":39,"column":38}},"21":{"start":{"line":42,"column":23},"end":{"line":42,"column":100}},"22":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"23":{"start":{"line":44,"column":12},"end":{"line":44,"column":89}},"24":{"start":{"line":52,"column":8},"end":{"line":52,"column":31}},"25":{"start":{"line":59,"column":8},"end":{"line":59,"column":32}},"26":{"start":{"line":66,"column":37},"end":{"line":66,"column":83}},"27":{"start":{"line":67,"column":8},"end":{"line":71,"column":11}},"28":{"start":{"line":68,"column":12},"end":{"line":68,"column":100}},"29":{"start":{"line":69,"column":12},"end":{"line":69,"column":92}},"30":{"start":{"line":70,"column":12},"end":{"line":70,"column":88}},"31":{"start":{"line":72,"column":8},"end":{"line":72,"column":38}},"32":{"start":{"line":81,"column":35},"end":{"line":81,"column":37}},"33":{"start":{"line":82,"column":26},"end":{"line":82,"column":28}},"34":{"start":{"line":84,"column":8},"end":{"line":91,"column":11}},"35":{"start":{"line":85,"column":12},"end":{"line":89,"column":15}},"36":{"start":{"line":86,"column":16},"end":{"line":86,"column":70}},"37":{"start":{"line":92,"column":27},"end":{"line":92,"column":103}},"38":{"start":{"line":92,"column":65},"end":{"line":92,"column":102}},"39":{"start":{"line":93,"column":8},"end":{"line":93,"column":26}},"40":{"start":{"line":100,"column":26},"end":{"line":100,"column":27}},"41":{"start":{"line":101,"column":8},"end":{"line":103,"column":11}},"42":{"start":{"line":102,"column":12},"end":{"line":102,"column":47}},"43":{"start":{"line":104,"column":8},"end":{"line":104,"column":27}},"44":{"start":{"line":107,"column":8},"end":{"line":107,"column":37}},"45":{"start":{"line":110,"column":20},"end":{"line":110,"column":51}},"46":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"47":{"start":{"line":112,"column":12},"end":{"line":112,"column":76}},"48":{"start":{"line":115,"column":12},"end":{"line":115,"column":46}},"49":{"start":{"line":119,"column":0},"end":{"line":119,"column":20}},"50":{"start":{"line":121,"column":4},"end":{"line":121,"column":103}},"51":{"start":{"line":122,"column":4},"end":{"line":125,"column":7}},"52":{"start":{"line":123,"column":8},"end":{"line":123,"column":30}},"53":{"start":{"line":124,"column":8},"end":{"line":124,"column":36}},"54":{"start":{"line":127,"column":0},"end":{"line":127,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":57},"end":{"line":46,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":28},"end":{"line":22,"column":29}},"loc":{"start":{"line":22,"column":41},"end":{"line":24,"column":9}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":33},"end":{"line":27,"column":34}},"loc":{"start":{"line":27,"column":47},"end":{"line":41,"column":9}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":20},"end":{"line":53,"column":5}},"line":51},"4":{"name":"(anonymous_4)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":16},"end":{"line":60,"column":5}},"line":58},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":32},"end":{"line":73,"column":5}},"line":65},"6":{"name":"(anonymous_6)","decl":{"start":{"line":67,"column":33},"end":{"line":67,"column":34}},"loc":{"start":{"line":67,"column":47},"end":{"line":71,"column":9}},"line":67},"7":{"name":"(anonymous_7)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":25},"end":{"line":94,"column":5}},"line":80},"8":{"name":"(anonymous_8)","decl":{"start":{"line":84,"column":33},"end":{"line":84,"column":34}},"loc":{"start":{"line":84,"column":48},"end":{"line":91,"column":9}},"line":84},"9":{"name":"(anonymous_9)","decl":{"start":{"line":85,"column":45},"end":{"line":85,"column":46}},"loc":{"start":{"line":85,"column":63},"end":{"line":89,"column":13}},"line":85},"10":{"name":"(anonymous_10)","decl":{"start":{"line":92,"column":55},"end":{"line":92,"column":56}},"loc":{"start":{"line":92,"column":65},"end":{"line":92,"column":102}},"line":92},"11":{"name":"(anonymous_11)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":20},"end":{"line":105,"column":5}},"line":99},"12":{"name":"(anonymous_12)","decl":{"start":{"line":101,"column":33},"end":{"line":101,"column":34}},"loc":{"start":{"line":101,"column":46},"end":{"line":103,"column":9}},"line":101},"13":{"name":"(anonymous_13)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":25},"end":{"line":108,"column":5}},"line":106},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":23},"end":{"line":117,"column":5}},"line":109},"15":{"name":"printMenu","decl":{"start":{"line":120,"column":9},"end":{"line":120,"column":18}},"loc":{"start":{"line":120,"column":25},"end":{"line":126,"column":1}},"line":120},"16":{"name":"(anonymous_16)","decl":{"start":{"line":122,"column":29},"end":{"line":122,"column":30}},"loc":{"start":{"line":122,"column":48},"end":{"line":125,"column":5}},"line":122}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":40,"column":13}},{"start":{"line":29,"column":12},"end":{"line":40,"column":13}}],"line":29},"1":{"loc":{"start":{"line":32,"column":17},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":17},"end":{"line":40,"column":13}},{"start":{"line":32,"column":17},"end":{"line":40,"column":13}}],"line":32},"2":{"loc":{"start":{"line":35,"column":17},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":17},"end":{"line":40,"column":13}},{"start":{"line":35,"column":17},"end":{"line":40,"column":13}}],"line":35},"3":{"loc":{"start":{"line":38,"column":17},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":17},"end":{"line":40,"column":13}},{"start":{"line":38,"column":17},"end":{"line":40,"column":13}}],"line":38},"4":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"5":{"loc":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},{"start":{"line":111,"column":8},"end":{"line":116,"column":9}}],"line":111}},"s":{"0":1,"1":1,"2":1,"3":7,"4":7,"5":7,"6":7,"7":7,"8":7,"9":14,"10":7,"11":7,"12":21,"13":21,"14":7,"15":14,"16":6,"17":8,"18":7,"19":1,"20":1,"21":7,"22":7,"23":0,"24":11,"25":7,"26":3,"27":3,"28":9,"29":9,"30":9,"31":3,"32":1,"33":1,"34":1,"35":3,"36":9,"37":1,"38":9,"39":1,"40":1,"41":1,"42":3,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":1},"f":{"0":7,"1":14,"2":21,"3":11,"4":7,"5":3,"6":9,"7":1,"8":3,"9":9,"10":9,"11":1,"12":3,"13":0,"14":0,"15":0,"16":0},"b":{"0":[7,14],"1":[6,8],"2":[7,1],"3":[1,0],"4":[0,7],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/menu.ts","sources":["/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import { Alimento } from \"./alimento\";\nimport { Macronutrientes } from \"./alimento\"\nimport { Grupo } from \"./alimento\";\nimport { Plato } from \"./plato\";\nimport { printPlato } from \"./plato\";\nimport { Categoria } from \"./plato\";\n\n/*\n * Esta es la clase Menu.\n */\nexport class Menu {\n  /**\n   * Constructor de la clase Menu. Comprueba que existan al menos 3 platos de 3 categorías \n   * distintas (Entrante, Primero, Segundo y Postre) en cada Menú. Si no los hay, devuelve un error.\n   * @param nombreMenu Nombre del menú en cuestión.\n   * @param primerPlato Primer plato del menú.\n   * @param demasPlatos Array donde se almacenan el resto de los platos del menú.\n   */\n  private precio: number = 0;\n  private arrayPlatos: Plato[] = [];\n  constructor(private nombreMenu: string, private primerPlato: Plato, ...demasPlatos: Plato[]) {\n    this.arrayPlatos.push(primerPlato);\n    demasPlatos.forEach((element) => {\n      this.arrayPlatos.push(element);\n    });\n\n    let existeElemento: number[] = [0, 0, 0, 0];\n    let grupoElemento: Categoria;\n    this.arrayPlatos.forEach((elemento) => {\n      grupoElemento = elemento.getCategoria();\n      if (grupoElemento === 'ENTRANTE') {\n        existeElemento[0] = 1;\n      } else if (grupoElemento === 'PRIMERO') {\n        existeElemento[1] = 1;\n      } else if (grupoElemento === 'SEGUNDO') {\n        existeElemento[2] = 1;\n      } else if (grupoElemento === 'POSTRE') {\n        existeElemento[3] = 1;\n      }\n    });\n    const counts = existeElemento[0] + existeElemento[1] + existeElemento[2] + existeElemento[3];\n    if (counts < 3) {\n      throw new Error(\"Los menús deben tener 3 categorías de platos como mínimo.\");\n    }\n  }\n\n  /**\n   * Obtiene el nombre del menú.\n   * @returns Nombre del menú.\n   */\n  getNombreMenu() {\n    return this.nombreMenu;\n  }\n\n  /**\n   * Obtiene los platos que componen el menú.\n   * @returns Listado de los platos del menú.\n   */\n  getPlatos(){\n    return this.arrayPlatos;\n  }\n\n  /**\n   * Obtiene la composición nutricional del menú, obteníendola plato por plato.\n   * @returns Cantidad total de carbohidratos, proteínas y lípidos del menú.\n   */\n  getComposicionNutricional() {\n    let composicionNutricional: Macronutrientes = {carbohidratos: 0, proteinas: 0, lipidos: 0};\n    this.arrayPlatos.forEach((elemento) => {\n      composicionNutricional.carbohidratos += elemento.calculoMacronutrientes().carbohidratos;\n      composicionNutricional.proteinas += elemento.calculoMacronutrientes().proteinas;\n      composicionNutricional.lipidos += elemento.calculoMacronutrientes().lipidos;\n    });\n    return composicionNutricional;\n  }\n  \n  /**\n   * Obtiene los grupos de alimentos que componen el menú. Almacena todos los grupos de \n   * todos los alimentos de todos los platos y al final filtrar para tener una copia de\n   * cada. Este listado final de grupos únicos es lo que devuelve.\n   * @returns Listado de grupos de alimentos (únicos) de todo el menú.\n   */\n  getGruposAlimentos(): Grupo[] {\n    let arrayGruposAlimentos: Grupo[] = [];\n    let platosGrupo: [Alimento, number][] = [];\n    //let valorGrupo: any;\n    this.arrayPlatos.forEach((cadaPlato) => {\n      cadaPlato.getAlimentos().forEach((cadaAlimento) => {\n        arrayGruposAlimentos.push(cadaAlimento[0].getGrupo());\n        //valorGrupo = alimento[0].getGrupo();\n        //arrayGruposAlimentos[valorGrupo] = 1 + (arrayGruposAlimentos[valorGrupo] || 0)\n      });;\n    });\n    const arrayFinal: Grupo[] = arrayGruposAlimentos.filter((n, i) => arrayGruposAlimentos.indexOf(n) === i);\n    return arrayFinal;\n  }\n  \n  /**\n   * Obtiene el precio del menú sumando los precios de sus platos.\n   * @returns Precio (en euros) del menú.\n   */\n  getPrecioMenu(): number {\n    let precioTotal: number = 0;\n    this.arrayPlatos.forEach((element) => {\n      precioTotal += element.getPrecio();\n    });\n    return precioTotal;\n  }\n\n  addNuevoPlato(plato: Plato): void {\n    this.arrayPlatos.push(plato);\n  }\n\n  deletePlato(plato: Plato): void {\n    let index = this.arrayPlatos.indexOf(plato);\n    if(index == -1) {\n      console.log('El plato no se encuentra en el menu. Lo sentimos');\n    } else {\n      this.arrayPlatos.splice(index, 1);\n    }\n  }\n}\n\nexport function printMenu(menu: Menu): void {\n  console.log('Menu: ' + menu.getNombreMenu() + ' -- Precio: ' + +(menu.getPrecioMenu()).toFixed(2));\n  menu.getPlatos().forEach(function(element) {\n    console.log('------');\n    printPlato(element);\n  })\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"93572c197bc7bcf3c6146bc9ccfbfedb24947be3","contentHash":"b81abae46ca4bf19b6d473e8c9706c012c594673a0731ca09768c9494ace4703"},"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/carta.ts":{"path":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/carta.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":39}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":28}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":35}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":53}},"8":{"start":{"line":30,"column":24},"end":{"line":30,"column":66}},"9":{"start":{"line":31,"column":8},"end":{"line":31,"column":39}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":32}},"11":{"start":{"line":45,"column":8},"end":{"line":45,"column":30}},"12":{"start":{"line":52,"column":8},"end":{"line":52,"column":39}},"13":{"start":{"line":59,"column":25},"end":{"line":59,"column":27}},"14":{"start":{"line":60,"column":8},"end":{"line":60,"column":78}},"15":{"start":{"line":61,"column":8},"end":{"line":61,"column":26}},"16":{"start":{"line":69,"column":33},"end":{"line":69,"column":35}},"17":{"start":{"line":70,"column":8},"end":{"line":74,"column":11}},"18":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"19":{"start":{"line":72,"column":16},"end":{"line":72,"column":47}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":32}},"21":{"start":{"line":83,"column":35},"end":{"line":83,"column":37}},"22":{"start":{"line":84,"column":8},"end":{"line":88,"column":11}},"23":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"24":{"start":{"line":86,"column":16},"end":{"line":86,"column":53}},"25":{"start":{"line":89,"column":8},"end":{"line":95,"column":11}},"26":{"start":{"line":90,"column":12},"end":{"line":94,"column":15}},"27":{"start":{"line":91,"column":16},"end":{"line":93,"column":17}},"28":{"start":{"line":92,"column":20},"end":{"line":92,"column":58}},"29":{"start":{"line":96,"column":8},"end":{"line":96,"column":34}},"30":{"start":{"line":104,"column":29},"end":{"line":104,"column":31}},"31":{"start":{"line":105,"column":8},"end":{"line":105,"column":54}},"32":{"start":{"line":106,"column":8},"end":{"line":106,"column":55}},"33":{"start":{"line":107,"column":8},"end":{"line":107,"column":28}},"34":{"start":{"line":110,"column":0},"end":{"line":110,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":60},"end":{"line":21,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":41},"end":{"line":32,"column":5}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":21},"end":{"line":39,"column":5}},"line":37},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":18},"end":{"line":46,"column":5}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":26},"end":{"line":53,"column":5}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":15},"end":{"line":62,"column":5}},"line":58},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":27},"end":{"line":76,"column":5}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":70,"column":31},"end":{"line":70,"column":32}},"loc":{"start":{"line":70,"column":44},"end":{"line":74,"column":9}},"line":70},"8":{"name":"(anonymous_8)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":29},"end":{"line":97,"column":5}},"line":82},"9":{"name":"(anonymous_9)","decl":{"start":{"line":84,"column":40},"end":{"line":84,"column":41}},"loc":{"start":{"line":84,"column":57},"end":{"line":88,"column":9}},"line":84},"10":{"name":"(anonymous_10)","decl":{"start":{"line":89,"column":31},"end":{"line":89,"column":32}},"loc":{"start":{"line":89,"column":45},"end":{"line":95,"column":9}},"line":89},"11":{"name":"(anonymous_11)","decl":{"start":{"line":90,"column":41},"end":{"line":90,"column":42}},"loc":{"start":{"line":90,"column":59},"end":{"line":94,"column":13}},"line":90},"12":{"name":"(anonymous_12)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":28},"end":{"line":108,"column":5}},"line":103}},"branchMap":{"0":{"loc":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},{"start":{"line":71,"column":12},"end":{"line":73,"column":13}}],"line":71},"1":{"loc":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},{"start":{"line":85,"column":12},"end":{"line":87,"column":13}}],"line":85},"2":{"loc":{"start":{"line":91,"column":16},"end":{"line":93,"column":17}},"type":"if","locations":[{"start":{"line":91,"column":16},"end":{"line":93,"column":17}},{"start":{"line":91,"column":16},"end":{"line":93,"column":17}}],"line":91}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":4,"6":4,"7":4,"8":1,"9":1,"10":1,"11":4,"12":2,"13":1,"14":1,"15":1,"16":4,"17":4,"18":8,"19":3,"20":4,"21":3,"22":3,"23":3,"24":2,"25":3,"26":6,"27":18,"28":1,"29":3,"30":1,"31":1,"32":1,"33":1,"34":1},"f":{"0":4,"1":1,"2":1,"3":4,"4":2,"5":1,"6":4,"7":8,"8":3,"9":3,"10":6,"11":18,"12":1},"b":{"0":[3,5],"1":[2,1],"2":[1,17]},"inputSourceMap":{"version":3,"file":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/carta.ts","sources":["/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/carta.ts"],"names":[],"mappings":";;;AAKA,iCAA8B;AAG9B;;GAEG;AACH,MAAa,KAAK;IAShB,YAAoB,WAAmB,EAAE,SAAiB,EAAE,kBAA2B;QAAnE,gBAAW,GAAX,WAAW,CAAQ;QARvC;;;;;WAKG;QACK,cAAS,GAAW,EAAE,CAAC;QACvB,uBAAkB,GAAY,EAAE,CAAC;QAEvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC,CAAC,gCAAgC;IAChF,CAAC;IAED;;;;;;OAMG;IACH,SAAS,CAAC,MAAc,EAAE,MAAa,EAAE,GAAG,MAAe;QACzD,IAAI,SAAS,GAAG,IAAI,WAAI,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,mBAAmB;QACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,IAAI,UAAU,GAAmB,EAAE,CAAC;QACpC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;QACtE,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,UAAkB;QAC3B,MAAM,gBAAgB,GAAW,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACjC,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;gBACnD,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,WAAmB;QAC7B,MAAM,kBAAkB,GAAY,EAAE,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE;YAC9C,IAAI,WAAW,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;gBACzD,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClC,QAAQ,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;gBAC5C,IAAI,YAAY,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC1D,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACvC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,MAAc;QAC5B,MAAM,YAAY,GAAmB,EAAE,CAAC;QACxC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QAC9C,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/C,OAAO,YAAY,CAAC;IACtB,CAAC;CACF;AA5GD,sBA4GC","sourcesContent":["import { Alimento } from \"./alimento\";\nimport { Macronutrientes } from \"./alimento\"\nimport { Grupo } from \"./alimento\";\nimport { Plato } from \"./plato\";\nimport { Categoria } from \"./plato\";\nimport { Menu } from \"./menu\";\nimport * as inquirer from 'inquirer';\n\n/*\n * Esta es la clase Carta.\n */\nexport class Carta {\n  /**\n   * Constructor de la clase Carta.\n   * @param nombreCarta Nombre de la carta.\n   * @param arrayMenu Todos los menús que contiene la carta.\n   * @param arrayPlatosSueltos Todos los platos sueltos para que el comensales diseñen su propio menú.\n   */\n  private arrayMenu: Menu[] = [];\n  private arrayPlatosSueltos: Plato[] = [];\n  constructor(private nombreCarta: string, arrayMenu: Menu[], arrayPlatosSueltos: Plato[]) {\n    this.arrayMenu = arrayMenu;\n    this.arrayPlatosSueltos = arrayPlatosSueltos; // si no, se queja que no existe\n  }\n\n  /**\n   * Permite añadir nuevos menús creados por los comensales, combinando\n   * platos sueltos ya existentes.\n   * @param nombre Nombre del nuevo menú.\n   * @param plato1 Nombre del primer plato.\n   * @param platos Nombre de los demás platos.\n   */\n  nuevoMenu(nombre: string, plato1: Plato, ...platos: Plato[]) {\n    let nuevoMenu = new Menu(nombre, plato1, ...platos);\n    this.arrayMenu.push(nuevoMenu);\n  }\n\n  /**\n   * Obtiene el nombre de la Carta.\n   * @returns Nombre de la carta.\n   */\n  getNombreCarta(): string {\n    return this.nombreCarta;\n  }\n\n  /**\n   * Obtiene el array de los Menús de la carta.\n   * @returns Array de menús.\n   */\n  getAllMenus(): Menu[] {\n    return this.arrayMenu;\n  }\n\n  /**\n   * Obtiene el array de los Platos sueltos de la carta.\n   * @returns Array de Platos Sueltos.\n   */\n  getAllPlatosSueltos(): Plato[] {\n    return this.arrayPlatosSueltos;\n  }\n\n  /**\n   * Obtiene la carta completa del restaurante (menús y platos sueltos).\n   * @returns Array con menús y platos sueltos.\n   */\n  getCarta() {\n    let arrayCarta: (Menu|Plato)[] = [];\n    arrayCarta.push(...this.getAllMenus(), ...this.getAllPlatosSueltos());\n    return arrayCarta;\n  }\n\n  /**\n   * Función que busca el nombre indicado entre los menús y \n   * devuelve todas las coincidencias.\n   * @returns Array de todos los menús que contengan esa cadena en su nombre.\n   */\n  searchMenu(nombreMenu: string): Menu[] {\n    const arrayMatchedMenu: Menu[] = [];\n    this.arrayMenu.forEach((element) => {\n      if (element.getNombreMenu().search(nombreMenu) > -1) {\n        arrayMatchedMenu.push(element);\n      }\n    });\n    return arrayMatchedMenu;\n  }\n\n  /**\n   * Función que busca el nombre indicado entre todos los Platos, es decir,\n   * entre los Platos sueltos y los Platos de un Menú.\n   * @returns Array de Platos que contengan esa cadena en su nombre.\n   */\n  searchPlato(nombrePlato: string): Plato[] {\n    const arrayMatchedPlatos: Plato[] = [];\n    this.arrayPlatosSueltos.forEach((platoSuelto) => {\n      if (platoSuelto.getNombrePlato().search(nombrePlato) > -1) {\n        arrayMatchedPlatos.push(platoSuelto);\n      }\n    });\n    this.arrayMenu.forEach((cadaMenu) => {\n      cadaMenu.getPlatos().forEach((platoDelMenu) => {\n        if (platoDelMenu.getNombrePlato().search(nombrePlato) > -1) {\n          arrayMatchedPlatos.push(platoDelMenu);\n        }\n      });\n    });\n    return arrayMatchedPlatos;\n  }\n\n  /**\n   * Función que busca el string entre todos los nombres de todos los\n   * menús y todos los platos de la carta.\n   * @returns Array de todas las coincidencias (sean Menús o Platos).\n   */\n  searchEnGeneral(nombre: string): (Menu|Plato)[] {\n    const arrayMatched: (Menu|Plato)[] = [];\n    arrayMatched.push(...this.searchMenu(nombre));\n    arrayMatched.push(...this.searchPlato(nombre));\n    return arrayMatched;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b656e950b53ef310f21a3ef8883e3817c8104b90","contentHash":"cfb797e5d77dfae7cfc4617952b8a89582a3384818c6124817559904be681c34"},"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/comanda.ts":{"path":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/comanda.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":36}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"8":{"start":{"line":12,"column":0},"end":{"line":17,"column":40}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":64}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":68}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":59}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":89}},"13":{"start":{"line":19,"column":0},"end":{"line":23,"column":30}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":50}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":41}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":31}},"17":{"start":{"line":25,"column":0},"end":{"line":29,"column":50}},"18":{"start":{"line":26,"column":4},"end":{"line":26,"column":54}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":52}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":49}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":27}},"22":{"start":{"line":40,"column":8},"end":{"line":40,"column":26}},"23":{"start":{"line":41,"column":8},"end":{"line":41,"column":33}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":28}},"25":{"start":{"line":60,"column":29},"end":{"line":60,"column":62}},"26":{"start":{"line":61,"column":17},"end":{"line":64,"column":10}},"27":{"start":{"line":65,"column":8},"end":{"line":92,"column":9}},"28":{"start":{"line":66,"column":12},"end":{"line":66,"column":55}},"29":{"start":{"line":69,"column":12},"end":{"line":86,"column":13}},"30":{"start":{"line":70,"column":16},"end":{"line":85,"column":19}},"31":{"start":{"line":71,"column":20},"end":{"line":84,"column":23}},"32":{"start":{"line":72,"column":24},"end":{"line":83,"column":25}},"33":{"start":{"line":74,"column":32},"end":{"line":74,"column":60}},"34":{"start":{"line":75,"column":32},"end":{"line":75,"column":38}},"35":{"start":{"line":77,"column":44},"end":{"line":77,"column":74}},"36":{"start":{"line":78,"column":32},"end":{"line":79,"column":66}},"37":{"start":{"line":79,"column":36},"end":{"line":79,"column":66}},"38":{"start":{"line":80,"column":32},"end":{"line":80,"column":38}},"39":{"start":{"line":82,"column":32},"end":{"line":82,"column":71}},"40":{"start":{"line":87,"column":12},"end":{"line":91,"column":15}},"41":{"start":{"line":88,"column":16},"end":{"line":90,"column":17}},"42":{"start":{"line":88,"column":33},"end":{"line":88,"column":34}},"43":{"start":{"line":89,"column":20},"end":{"line":89,"column":47}},"44":{"start":{"line":104,"column":30},"end":{"line":104,"column":65}},"45":{"start":{"line":105,"column":17},"end":{"line":108,"column":10}},"46":{"start":{"line":109,"column":8},"end":{"line":137,"column":9}},"47":{"start":{"line":110,"column":12},"end":{"line":110,"column":55}},"48":{"start":{"line":113,"column":12},"end":{"line":131,"column":13}},"49":{"start":{"line":114,"column":16},"end":{"line":130,"column":19}},"50":{"start":{"line":115,"column":20},"end":{"line":115,"column":91}},"51":{"start":{"line":116,"column":20},"end":{"line":129,"column":23}},"52":{"start":{"line":117,"column":24},"end":{"line":128,"column":25}},"53":{"start":{"line":119,"column":32},"end":{"line":119,"column":61}},"54":{"start":{"line":120,"column":32},"end":{"line":120,"column":38}},"55":{"start":{"line":122,"column":44},"end":{"line":122,"column":75}},"56":{"start":{"line":123,"column":32},"end":{"line":124,"column":67}},"57":{"start":{"line":124,"column":36},"end":{"line":124,"column":67}},"58":{"start":{"line":125,"column":32},"end":{"line":125,"column":38}},"59":{"start":{"line":127,"column":32},"end":{"line":127,"column":71}},"60":{"start":{"line":132,"column":12},"end":{"line":136,"column":15}},"61":{"start":{"line":133,"column":16},"end":{"line":135,"column":17}},"62":{"start":{"line":133,"column":33},"end":{"line":133,"column":34}},"63":{"start":{"line":134,"column":20},"end":{"line":134,"column":47}},"64":{"start":{"line":148,"column":31},"end":{"line":148,"column":33}},"65":{"start":{"line":149,"column":8},"end":{"line":160,"column":11}},"66":{"start":{"line":150,"column":12},"end":{"line":159,"column":13}},"67":{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},"68":{"start":{"line":152,"column":20},"end":{"line":152,"column":50}},"69":{"start":{"line":155,"column":17},"end":{"line":159,"column":13}},"70":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"71":{"start":{"line":157,"column":20},"end":{"line":157,"column":50}},"72":{"start":{"line":161,"column":8},"end":{"line":161,"column":30}},"73":{"start":{"line":171,"column":29},"end":{"line":171,"column":68}},"74":{"start":{"line":173,"column":8},"end":{"line":178,"column":11}},"75":{"start":{"line":174,"column":12},"end":{"line":174,"column":51}},"76":{"start":{"line":175,"column":12},"end":{"line":177,"column":13}},"77":{"start":{"line":176,"column":16},"end":{"line":176,"column":46}},"78":{"start":{"line":187,"column":8},"end":{"line":187,"column":24}},"79":{"start":{"line":188,"column":8},"end":{"line":209,"column":11}},"80":{"start":{"line":194,"column":12},"end":{"line":208,"column":13}},"81":{"start":{"line":196,"column":20},"end":{"line":196,"column":44}},"82":{"start":{"line":197,"column":20},"end":{"line":197,"column":26}},"83":{"start":{"line":199,"column":20},"end":{"line":199,"column":46}},"84":{"start":{"line":200,"column":20},"end":{"line":200,"column":26}},"85":{"start":{"line":202,"column":20},"end":{"line":202,"column":44}},"86":{"start":{"line":203,"column":20},"end":{"line":203,"column":26}},"87":{"start":{"line":205,"column":20},"end":{"line":205,"column":44}},"88":{"start":{"line":206,"column":20},"end":{"line":206,"column":41}},"89":{"start":{"line":207,"column":20},"end":{"line":207,"column":26}},"90":{"start":{"line":215,"column":18},"end":{"line":215,"column":20}},"91":{"start":{"line":216,"column":8},"end":{"line":218,"column":11}},"92":{"start":{"line":217,"column":12},"end":{"line":217,"column":46}},"93":{"start":{"line":219,"column":8},"end":{"line":266,"column":11}},"94":{"start":{"line":230,"column":32},"end":{"line":230,"column":57}},"95":{"start":{"line":231,"column":20},"end":{"line":231,"column":60}},"96":{"start":{"line":235,"column":28},"end":{"line":235,"column":72}},"97":{"start":{"line":236,"column":22},"end":{"line":236,"column":24}},"98":{"start":{"line":237,"column":12},"end":{"line":239,"column":15}},"99":{"start":{"line":238,"column":16},"end":{"line":238,"column":51}},"100":{"start":{"line":240,"column":23},"end":{"line":240,"column":25}},"101":{"start":{"line":241,"column":12},"end":{"line":243,"column":15}},"102":{"start":{"line":242,"column":16},"end":{"line":242,"column":52}},"103":{"start":{"line":244,"column":12},"end":{"line":265,"column":15}},"104":{"start":{"line":255,"column":28},"end":{"line":255,"column":124}},"105":{"start":{"line":255,"column":68},"end":{"line":255,"column":123}},"106":{"start":{"line":256,"column":16},"end":{"line":258,"column":17}},"107":{"start":{"line":257,"column":20},"end":{"line":257,"column":48}},"108":{"start":{"line":259,"column":30},"end":{"line":259,"column":133}},"109":{"start":{"line":259,"column":80},"end":{"line":259,"column":132}},"110":{"start":{"line":260,"column":16},"end":{"line":262,"column":17}},"111":{"start":{"line":261,"column":20},"end":{"line":261,"column":52}},"112":{"start":{"line":263,"column":16},"end":{"line":263,"column":46}},"113":{"start":{"line":264,"column":16},"end":{"line":264,"column":58}},"114":{"start":{"line":272,"column":18},"end":{"line":272,"column":20}},"115":{"start":{"line":273,"column":8},"end":{"line":275,"column":11}},"116":{"start":{"line":274,"column":12},"end":{"line":274,"column":46}},"117":{"start":{"line":276,"column":8},"end":{"line":306,"column":11}},"118":{"start":{"line":287,"column":32},"end":{"line":287,"column":57}},"119":{"start":{"line":288,"column":20},"end":{"line":288,"column":60}},"120":{"start":{"line":298,"column":12},"end":{"line":298,"column":70}},"121":{"start":{"line":299,"column":12},"end":{"line":299,"column":109}},"122":{"start":{"line":300,"column":12},"end":{"line":305,"column":13}},"123":{"start":{"line":301,"column":16},"end":{"line":301,"column":40}},"124":{"start":{"line":304,"column":16},"end":{"line":304,"column":36}},"125":{"start":{"line":312,"column":18},"end":{"line":312,"column":20}},"126":{"start":{"line":313,"column":8},"end":{"line":315,"column":11}},"127":{"start":{"line":314,"column":12},"end":{"line":314,"column":47}},"128":{"start":{"line":316,"column":8},"end":{"line":346,"column":11}},"129":{"start":{"line":327,"column":32},"end":{"line":327,"column":57}},"130":{"start":{"line":328,"column":20},"end":{"line":328,"column":60}},"131":{"start":{"line":338,"column":12},"end":{"line":338,"column":72}},"132":{"start":{"line":339,"column":12},"end":{"line":339,"column":111}},"133":{"start":{"line":340,"column":12},"end":{"line":345,"column":13}},"134":{"start":{"line":341,"column":16},"end":{"line":341,"column":42}},"135":{"start":{"line":344,"column":16},"end":{"line":344,"column":36}},"136":{"start":{"line":352,"column":8},"end":{"line":386,"column":11}},"137":{"start":{"line":358,"column":12},"end":{"line":372,"column":13}},"138":{"start":{"line":360,"column":20},"end":{"line":362,"column":23}},"139":{"start":{"line":361,"column":24},"end":{"line":361,"column":49}},"140":{"start":{"line":363,"column":20},"end":{"line":363,"column":26}},"141":{"start":{"line":365,"column":20},"end":{"line":367,"column":23}},"142":{"start":{"line":366,"column":24},"end":{"line":366,"column":47}},"143":{"start":{"line":368,"column":20},"end":{"line":368,"column":26}},"144":{"start":{"line":370,"column":20},"end":{"line":370,"column":41}},"145":{"start":{"line":371,"column":20},"end":{"line":371,"column":26}},"146":{"start":{"line":373,"column":12},"end":{"line":385,"column":15}},"147":{"start":{"line":379,"column":16},"end":{"line":384,"column":17}},"148":{"start":{"line":380,"column":20},"end":{"line":380,"column":44}},"149":{"start":{"line":383,"column":20},"end":{"line":383,"column":41}},"150":{"start":{"line":392,"column":8},"end":{"line":392,"column":24}},"151":{"start":{"line":393,"column":8},"end":{"line":410,"column":11}},"152":{"start":{"line":399,"column":12},"end":{"line":409,"column":13}},"153":{"start":{"line":401,"column":20},"end":{"line":401,"column":44}},"154":{"start":{"line":402,"column":20},"end":{"line":402,"column":26}},"155":{"start":{"line":404,"column":20},"end":{"line":404,"column":40}},"156":{"start":{"line":405,"column":20},"end":{"line":405,"column":26}},"157":{"start":{"line":407,"column":20},"end":{"line":407,"column":67}},"158":{"start":{"line":408,"column":20},"end":{"line":408,"column":26}},"159":{"start":{"line":416,"column":8},"end":{"line":416,"column":29}},"160":{"start":{"line":419,"column":0},"end":{"line":419,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":1},"end":{"line":12,"column":2}},"loc":{"start":{"line":12,"column":25},"end":{"line":17,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":1},"end":{"line":19,"column":2}},"loc":{"start":{"line":19,"column":20},"end":{"line":23,"column":1}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":1},"end":{"line":25,"column":2}},"loc":{"start":{"line":25,"column":30},"end":{"line":29,"column":1}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":38},"end":{"line":42,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":21},"end":{"line":49,"column":5}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":40},"end":{"line":93,"column":5}},"line":59},"6":{"name":"(anonymous_6)","decl":{"start":{"line":70,"column":37},"end":{"line":70,"column":38}},"loc":{"start":{"line":70,"column":51},"end":{"line":85,"column":17}},"line":70},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":92},"end":{"line":71,"column":93}},"loc":{"start":{"line":71,"column":104},"end":{"line":84,"column":21}},"line":71},"8":{"name":"(anonymous_8)","decl":{"start":{"line":87,"column":33},"end":{"line":87,"column":34}},"loc":{"start":{"line":87,"column":46},"end":{"line":91,"column":13}},"line":87},"9":{"name":"(anonymous_9)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":43},"end":{"line":138,"column":5}},"line":103},"10":{"name":"(anonymous_10)","decl":{"start":{"line":114,"column":38},"end":{"line":114,"column":39}},"loc":{"start":{"line":114,"column":52},"end":{"line":130,"column":17}},"line":114},"11":{"name":"(anonymous_11)","decl":{"start":{"line":116,"column":93},"end":{"line":116,"column":94}},"loc":{"start":{"line":116,"column":105},"end":{"line":129,"column":21}},"line":116},"12":{"name":"(anonymous_12)","decl":{"start":{"line":132,"column":34},"end":{"line":132,"column":35}},"loc":{"start":{"line":132,"column":47},"end":{"line":136,"column":13}},"line":132},"13":{"name":"(anonymous_13)","decl":{"start":{"line":147,"column":4},"end":{"line":147,"column":5}},"loc":{"start":{"line":147,"column":31},"end":{"line":162,"column":5}},"line":147},"14":{"name":"(anonymous_14)","decl":{"start":{"line":149,"column":29},"end":{"line":149,"column":30}},"loc":{"start":{"line":149,"column":43},"end":{"line":160,"column":9}},"line":149},"15":{"name":"(anonymous_15)","decl":{"start":{"line":170,"column":4},"end":{"line":170,"column":5}},"loc":{"start":{"line":170,"column":49},"end":{"line":179,"column":5}},"line":170},"16":{"name":"(anonymous_16)","decl":{"start":{"line":173,"column":29},"end":{"line":173,"column":30}},"loc":{"start":{"line":173,"column":43},"end":{"line":178,"column":9}},"line":173},"17":{"name":"(anonymous_17)","decl":{"start":{"line":186,"column":4},"end":{"line":186,"column":5}},"loc":{"start":{"line":186,"column":19},"end":{"line":210,"column":5}},"line":186},"18":{"name":"(anonymous_18)","decl":{"start":{"line":193,"column":16},"end":{"line":193,"column":17}},"loc":{"start":{"line":193,"column":31},"end":{"line":209,"column":9}},"line":193},"19":{"name":"(anonymous_19)","decl":{"start":{"line":214,"column":4},"end":{"line":214,"column":5}},"loc":{"start":{"line":214,"column":23},"end":{"line":267,"column":5}},"line":214},"20":{"name":"(anonymous_20)","decl":{"start":{"line":216,"column":41},"end":{"line":216,"column":42}},"loc":{"start":{"line":216,"column":60},"end":{"line":218,"column":9}},"line":216},"21":{"name":"(anonymous_21)","decl":{"start":{"line":229,"column":26},"end":{"line":229,"column":27}},"loc":{"start":{"line":229,"column":43},"end":{"line":232,"column":17}},"line":229},"22":{"name":"(anonymous_22)","decl":{"start":{"line":234,"column":21},"end":{"line":234,"column":22}},"loc":{"start":{"line":234,"column":36},"end":{"line":266,"column":9}},"line":234},"23":{"name":"(anonymous_23)","decl":{"start":{"line":237,"column":43},"end":{"line":237,"column":44}},"loc":{"start":{"line":237,"column":62},"end":{"line":239,"column":13}},"line":237},"24":{"name":"(anonymous_24)","decl":{"start":{"line":241,"column":53},"end":{"line":241,"column":54}},"loc":{"start":{"line":241,"column":72},"end":{"line":243,"column":13}},"line":241},"25":{"name":"(anonymous_25)","decl":{"start":{"line":254,"column":25},"end":{"line":254,"column":26}},"loc":{"start":{"line":254,"column":41},"end":{"line":265,"column":13}},"line":254},"26":{"name":"(anonymous_26)","decl":{"start":{"line":255,"column":56},"end":{"line":255,"column":57}},"loc":{"start":{"line":255,"column":68},"end":{"line":255,"column":123}},"line":255},"27":{"name":"(anonymous_27)","decl":{"start":{"line":259,"column":68},"end":{"line":259,"column":69}},"loc":{"start":{"line":259,"column":80},"end":{"line":259,"column":132}},"line":259},"28":{"name":"(anonymous_28)","decl":{"start":{"line":271,"column":4},"end":{"line":271,"column":5}},"loc":{"start":{"line":271,"column":23},"end":{"line":307,"column":5}},"line":271},"29":{"name":"(anonymous_29)","decl":{"start":{"line":273,"column":41},"end":{"line":273,"column":42}},"loc":{"start":{"line":273,"column":60},"end":{"line":275,"column":9}},"line":273},"30":{"name":"(anonymous_30)","decl":{"start":{"line":286,"column":26},"end":{"line":286,"column":27}},"loc":{"start":{"line":286,"column":43},"end":{"line":289,"column":17}},"line":286},"31":{"name":"(anonymous_31)","decl":{"start":{"line":297,"column":21},"end":{"line":297,"column":22}},"loc":{"start":{"line":297,"column":36},"end":{"line":306,"column":9}},"line":297},"32":{"name":"(anonymous_32)","decl":{"start":{"line":311,"column":4},"end":{"line":311,"column":5}},"loc":{"start":{"line":311,"column":25},"end":{"line":347,"column":5}},"line":311},"33":{"name":"(anonymous_33)","decl":{"start":{"line":313,"column":49},"end":{"line":313,"column":50}},"loc":{"start":{"line":313,"column":68},"end":{"line":315,"column":9}},"line":313},"34":{"name":"(anonymous_34)","decl":{"start":{"line":326,"column":26},"end":{"line":326,"column":27}},"loc":{"start":{"line":326,"column":43},"end":{"line":329,"column":17}},"line":326},"35":{"name":"(anonymous_35)","decl":{"start":{"line":337,"column":21},"end":{"line":337,"column":22}},"loc":{"start":{"line":337,"column":36},"end":{"line":346,"column":9}},"line":337},"36":{"name":"(anonymous_36)","decl":{"start":{"line":351,"column":4},"end":{"line":351,"column":5}},"loc":{"start":{"line":351,"column":23},"end":{"line":387,"column":5}},"line":351},"37":{"name":"(anonymous_37)","decl":{"start":{"line":357,"column":21},"end":{"line":357,"column":22}},"loc":{"start":{"line":357,"column":36},"end":{"line":386,"column":9}},"line":357},"38":{"name":"(anonymous_38)","decl":{"start":{"line":360,"column":61},"end":{"line":360,"column":62}},"loc":{"start":{"line":360,"column":71},"end":{"line":362,"column":21}},"line":360},"39":{"name":"(anonymous_39)","decl":{"start":{"line":365,"column":53},"end":{"line":365,"column":54}},"loc":{"start":{"line":365,"column":63},"end":{"line":367,"column":21}},"line":365},"40":{"name":"(anonymous_40)","decl":{"start":{"line":378,"column":20},"end":{"line":378,"column":21}},"loc":{"start":{"line":378,"column":33},"end":{"line":385,"column":13}},"line":378},"41":{"name":"(anonymous_41)","decl":{"start":{"line":391,"column":4},"end":{"line":391,"column":5}},"loc":{"start":{"line":391,"column":20},"end":{"line":411,"column":5}},"line":391},"42":{"name":"(anonymous_42)","decl":{"start":{"line":398,"column":16},"end":{"line":398,"column":17}},"loc":{"start":{"line":398,"column":29},"end":{"line":410,"column":9}},"line":398},"43":{"name":"(anonymous_43)","decl":{"start":{"line":415,"column":4},"end":{"line":415,"column":5}},"loc":{"start":{"line":415,"column":18},"end":{"line":417,"column":5}},"line":415}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":3},"end":{"line":17,"column":38}},"type":"binary-expr","locations":[{"start":{"line":17,"column":3},"end":{"line":17,"column":15}},{"start":{"line":17,"column":20},"end":{"line":17,"column":37}}],"line":17},"1":{"loc":{"start":{"line":23,"column":3},"end":{"line":23,"column":28}},"type":"binary-expr","locations":[{"start":{"line":23,"column":3},"end":{"line":23,"column":10}},{"start":{"line":23,"column":15},"end":{"line":23,"column":27}}],"line":23},"2":{"loc":{"start":{"line":29,"column":3},"end":{"line":29,"column":48}},"type":"binary-expr","locations":[{"start":{"line":29,"column":3},"end":{"line":29,"column":20}},{"start":{"line":29,"column":25},"end":{"line":29,"column":47}}],"line":29},"3":{"loc":{"start":{"line":65,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":92,"column":9}},{"start":{"line":65,"column":8},"end":{"line":92,"column":9}}],"line":65},"4":{"loc":{"start":{"line":69,"column":12},"end":{"line":86,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":86,"column":13}},{"start":{"line":69,"column":12},"end":{"line":86,"column":13}}],"line":69},"5":{"loc":{"start":{"line":72,"column":24},"end":{"line":83,"column":25}},"type":"switch","locations":[{"start":{"line":73,"column":28},"end":{"line":75,"column":38}},{"start":{"line":76,"column":28},"end":{"line":80,"column":38}},{"start":{"line":81,"column":28},"end":{"line":82,"column":71}}],"line":72},"6":{"loc":{"start":{"line":78,"column":32},"end":{"line":79,"column":66}},"type":"if","locations":[{"start":{"line":78,"column":32},"end":{"line":79,"column":66}},{"start":{"line":78,"column":32},"end":{"line":79,"column":66}}],"line":78},"7":{"loc":{"start":{"line":109,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":137,"column":9}},{"start":{"line":109,"column":8},"end":{"line":137,"column":9}}],"line":109},"8":{"loc":{"start":{"line":113,"column":12},"end":{"line":131,"column":13}},"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":131,"column":13}},{"start":{"line":113,"column":12},"end":{"line":131,"column":13}}],"line":113},"9":{"loc":{"start":{"line":117,"column":24},"end":{"line":128,"column":25}},"type":"switch","locations":[{"start":{"line":118,"column":28},"end":{"line":120,"column":38}},{"start":{"line":121,"column":28},"end":{"line":125,"column":38}},{"start":{"line":126,"column":28},"end":{"line":127,"column":71}}],"line":117},"10":{"loc":{"start":{"line":123,"column":32},"end":{"line":124,"column":67}},"type":"if","locations":[{"start":{"line":123,"column":32},"end":{"line":124,"column":67}},{"start":{"line":123,"column":32},"end":{"line":124,"column":67}}],"line":123},"11":{"loc":{"start":{"line":150,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":159,"column":13}},{"start":{"line":150,"column":12},"end":{"line":159,"column":13}}],"line":150},"12":{"loc":{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},"type":"if","locations":[{"start":{"line":151,"column":16},"end":{"line":153,"column":17}},{"start":{"line":151,"column":16},"end":{"line":153,"column":17}}],"line":151},"13":{"loc":{"start":{"line":155,"column":17},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":155,"column":17},"end":{"line":159,"column":13}},{"start":{"line":155,"column":17},"end":{"line":159,"column":13}}],"line":155},"14":{"loc":{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},"type":"if","locations":[{"start":{"line":156,"column":16},"end":{"line":158,"column":17}},{"start":{"line":156,"column":16},"end":{"line":158,"column":17}}],"line":156},"15":{"loc":{"start":{"line":175,"column":12},"end":{"line":177,"column":13}},"type":"if","locations":[{"start":{"line":175,"column":12},"end":{"line":177,"column":13}},{"start":{"line":175,"column":12},"end":{"line":177,"column":13}}],"line":175},"16":{"loc":{"start":{"line":194,"column":12},"end":{"line":208,"column":13}},"type":"switch","locations":[{"start":{"line":195,"column":16},"end":{"line":197,"column":26}},{"start":{"line":198,"column":16},"end":{"line":200,"column":26}},{"start":{"line":201,"column":16},"end":{"line":203,"column":26}},{"start":{"line":204,"column":16},"end":{"line":207,"column":26}}],"line":194},"17":{"loc":{"start":{"line":231,"column":27},"end":{"line":231,"column":59}},"type":"binary-expr","locations":[{"start":{"line":231,"column":27},"end":{"line":231,"column":32}},{"start":{"line":231,"column":36},"end":{"line":231,"column":59}}],"line":231},"18":{"loc":{"start":{"line":256,"column":16},"end":{"line":258,"column":17}},"type":"if","locations":[{"start":{"line":256,"column":16},"end":{"line":258,"column":17}},{"start":{"line":256,"column":16},"end":{"line":258,"column":17}}],"line":256},"19":{"loc":{"start":{"line":260,"column":16},"end":{"line":262,"column":17}},"type":"if","locations":[{"start":{"line":260,"column":16},"end":{"line":262,"column":17}},{"start":{"line":260,"column":16},"end":{"line":262,"column":17}}],"line":260},"20":{"loc":{"start":{"line":288,"column":27},"end":{"line":288,"column":59}},"type":"binary-expr","locations":[{"start":{"line":288,"column":27},"end":{"line":288,"column":32}},{"start":{"line":288,"column":36},"end":{"line":288,"column":59}}],"line":288},"21":{"loc":{"start":{"line":300,"column":12},"end":{"line":305,"column":13}},"type":"if","locations":[{"start":{"line":300,"column":12},"end":{"line":305,"column":13}},{"start":{"line":300,"column":12},"end":{"line":305,"column":13}}],"line":300},"22":{"loc":{"start":{"line":328,"column":27},"end":{"line":328,"column":59}},"type":"binary-expr","locations":[{"start":{"line":328,"column":27},"end":{"line":328,"column":32}},{"start":{"line":328,"column":36},"end":{"line":328,"column":59}}],"line":328},"23":{"loc":{"start":{"line":340,"column":12},"end":{"line":345,"column":13}},"type":"if","locations":[{"start":{"line":340,"column":12},"end":{"line":345,"column":13}},{"start":{"line":340,"column":12},"end":{"line":345,"column":13}}],"line":340},"24":{"loc":{"start":{"line":358,"column":12},"end":{"line":372,"column":13}},"type":"switch","locations":[{"start":{"line":359,"column":16},"end":{"line":363,"column":26}},{"start":{"line":364,"column":16},"end":{"line":368,"column":26}},{"start":{"line":369,"column":16},"end":{"line":371,"column":26}}],"line":358},"25":{"loc":{"start":{"line":379,"column":16},"end":{"line":384,"column":17}},"type":"if","locations":[{"start":{"line":379,"column":16},"end":{"line":384,"column":17}},{"start":{"line":379,"column":16},"end":{"line":384,"column":17}}],"line":379},"26":{"loc":{"start":{"line":399,"column":12},"end":{"line":409,"column":13}},"type":"switch","locations":[{"start":{"line":400,"column":16},"end":{"line":402,"column":26}},{"start":{"line":403,"column":16},"end":{"line":405,"column":26}},{"start":{"line":406,"column":16},"end":{"line":408,"column":26}}],"line":399}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":2,"23":2,"24":5,"25":2,"26":2,"27":2,"28":0,"29":2,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":2,"41":2,"42":2,"43":2,"44":1,"45":1,"46":1,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":1,"63":1,"64":3,"65":3,"66":3,"67":2,"68":1,"69":1,"70":1,"71":0,"72":3,"73":1,"74":1,"75":1,"76":1,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1},"f":{"0":1,"1":1,"2":1,"3":2,"4":5,"5":2,"6":0,"7":0,"8":2,"9":1,"10":0,"11":0,"12":1,"13":3,"14":3,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[0,2],"4":[0,2],"5":[0,0,0],"6":[0,0],"7":[0,1],"8":[0,1],"9":[0,0,0],"10":[0,0],"11":[2,1],"12":[1,1],"13":[1,0],"14":[0,1],"15":[1,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/comanda.ts","sources":["/home/usuario/pr7_clone/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-p/src/comanda.ts"],"names":[],"mappings":"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","sourcesContent":["import { Carta } from \"./carta\";\nimport { Plato } from \"./plato\";\nimport { Menu } from \"./menu\";\nimport { printPlato } from \"./plato\";\nimport { printMenu } from \"./menu\";\n//import { promptMain } from './main';\n\nimport * as readline from 'readline';\nexport const inquirer = require('inquirer');\n\n\nenum SecondOption{\n  ElegirMenu = \"Seleccionar menu de la carta\",\n  ElegirPlatos = \"Seleccionar platos de la carta\",\n  ModificarMenu = \"Personalizar un menu\",\n  FinalizarComanda = \"Finalizar la comanda y volver al menu principal\"\n}\n\nenum options{\n  Visualizar = \"Visualizar la Carta\",\n  Comanda = \"Hacer comanda\",\n  Salir = \"Salir\"\n}\n\nenum optionsVisualizar{\n  Platos = \"Visualizar platos\",\n  Menus = \"Visualizar menus\",\n  Volver = \"Volver atras\"\n}\n\n/**\n * Esta es la clase Comanda. \n */\nexport class Comanda {\n  /**\n   * Constructor de la clase Comanda.    arrzo \n   * @param comanda Es un array dond\n   */\n  protected comanda: (Menu|Plato)[] = [];\n  protected itemMap = new Map<number, (Menu|Plato)>();  // Posible cambio de formato para ajustarse más al ejemplo.\n  constructor(public readonly carta: Carta, numeroComanda: number) {\n  }\n\n  /**\n   * Obtiene la comanda.\n   * @returns Array comanda entero.\n   */\n  mostrarComanda() {\n    return this.comanda;\n  }\n  \n  /**\n   * Método que permite al cliente añadir un menú a la comanda.\n   * Busca la cadena dentro de los nombres de todos los menús de la Carta.\n   * Encuentra todas las coincidencias, y si son 2 o más (diferentes), pregunta al cliente\n   * si quiere de ese tipo.\n   * \n   * @param nombreMenu El nombre del menú que quiere añadir a la comanda.\n   * @param cantidadMenu La cantidad de menús que quiere añadir a la comanda.\n   */\n  sumarMenu(nombreMenu: string, cantidadMenu: number) {\n    const matchedMenus = this.carta.searchMenu(nombreMenu);\n\n    let rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n\n    if (matchedMenus.length <= 0) {\n      console.log('No se encontró en la Carta.');\n    } else {\n      if (matchedMenus.length > 1) {\n        matchedMenus.forEach((elemento) => {\n          rl.question(('¿Añadir ' + elemento.getNombreMenu() + ' a la comanda?'), (answer) => {\n            switch(answer.toLowerCase()) {\n              case 'si':\n                console.log('Menú añadido');\n                break;\n              case 'no':\n                let index = matchedMenus.indexOf(elemento);\n                if (index > -1)\n                  matchedMenus.splice(index, 1);\n                break;\n              default:\n                console.log('Respuesta no soportada.')\n            }\n          });\n        });\n      }\n      matchedMenus.forEach((element) => {\n        for (let index = 0; index < cantidadMenu; index++) {\n          this.comanda.push(element);\n        }\n      });\n    }\n  } \n\n  /**\n   * Método que permite al cliente añadir un plato a la comanda.\n   * Busca la cadena dentro de los nombres de todos los platos de la Carta.\n   * Encuentra todas las coincidencias, y si son 2 o más (diferentes), pregunta al cliente\n   * si quiere de ese tipo.\n   * \n   * @param nombrePlato El nombre del plato que quiere añadir a la comanda.\n   * @param cantidadPlato La cantidad de este tipo de platos que quiere añadir a la comanda.\n   */\n  sumarPlato(nombrePlato: string, cantidadPlato: number) {\n    const matchedPlatos = this.carta.searchPlato(nombrePlato);\n\n    let rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n\n    if (matchedPlatos.length <= 0) {\n      console.log('No se encontró en la Carta.');\n    } else {\n      if (matchedPlatos.length > 1) {\n        matchedPlatos.forEach((elemento) => {\n          console.log('¿Añadir ' + elemento.getNombrePlato() + ' a la comanda?');\n          rl.question(('¿Añadir ' + elemento.getNombrePlato() + ' a la comanda?'), (answer) => {\n            switch(answer.toLowerCase()) {\n              case 'si':\n                console.log('Plato añadido');\n                break;\n              case 'no':\n                let index = matchedPlatos.indexOf(elemento);\n                if (index > -1)\n                  matchedPlatos.splice(index, 1);\n                break;\n              default:\n                console.log('Respuesta no soportada.')\n            }\n          });\n        });\n      }\n      matchedPlatos.forEach((element) => {\n        for (let index = 0; index < cantidadPlato; index++) {\n          this.comanda.push(element);\n        }\n      });\n    }\n  }\n\n  /**\n   * Método que permite encontrar un elemento de la comanda.\n   * Deshace el guardián de tipos entre Menu y Plato para consultar correctamente\n   * el nombre del elemento. Si el nombre coincide, entonces añade el objeto en el array.\n   * \n   * @param nombre Nombre de la comanda a buscar.\n   * @return Array de los objetos que coinciden en nombre.\n   */\n  encontrarEnComanda(nombre: string) {\n    const matchedResults: (Menu|Plato)[] = [];\n    this.comanda.forEach((elemento) => {\n      if (elemento instanceof Menu) {\n        if (elemento.getNombreMenu().search(nombre) > -1) {\n          matchedResults.push(elemento);\n        }\n      } else if (elemento instanceof Plato) {\n        if (elemento.getNombrePlato().search(nombre) > -1) {\n          matchedResults.push(elemento);\n        }\n      }\n    });\n    return matchedResults;\n  }\n\n  /**\n   * Método que permite eliminar elementos de la comanda.\n   * Busca la subcadena que le otorgamos entre los nombres de todos los elementos\n   * de la Comanda y almacena esos objetos para poder eliminarlos de la lista.\n   * \n   * @param nombre Nombre del elemento a eliminar.\n   */\n  quitarElemento(nombreElemento: string, cantidadMenu: number) {\n    const matchedMenus: (Menu|Plato)[] = this.encontrarEnComanda(nombreElemento);\n    let index;\n    matchedMenus.forEach((elemento) => {\n      index = this.comanda.indexOf(elemento);\n      if (index > -1) {\n        this.comanda.splice(index, 1);\n      }\n    });\n  }\n// --- --- --- --- --- --- ---\n// ----- INQUIRER THINGS -----\n/**\n * Prompt de Inquirer para realizar la comanda.\n * Permite añadir plato, menu, modificar menu.\n */\n  promptSecond(){\n  console.clear();\n  inquirer.prompt({\n    type: 'list',\n    name: 'SegundaRespuesta',\n    Message: '¿Qué desea hacer ahora?',\n    choices: Object.values(SecondOption)\n  }).then((respuesta: any) => {\n    switch(respuesta[\"SegundaRespuesta\"]){\n      case SecondOption.ElegirMenu:\n        this.promptElegirMenu();\n        break;\n      case SecondOption.ElegirPlatos:\n        this.promptElegirPlatos();\n        break;\n      case SecondOption.ModificarMenu:\n        this.promptCustomMenu();\n        break;\n      case SecondOption.FinalizarComanda:\n        console.log('Comanda ')\n        this.promptComanda();\n        break;\n    }\n  })\n}\n\n/**\n * Prompt de Inquirer para personalizar los menus\n */\n promptCustomMenu(){\n  let aux: string[] = [];\n  this.carta.getAllMenus().forEach(function(element) {\n    aux.push(element.getNombreMenu());\n  });\n\n  inquirer.prompt([{\n    type: 'list',\n    name: 'menuElegido',\n    Message: 'Menu a modificar',\n    choices: Object.values(aux)\n  },\n  {\n    type: 'input',\n    name: 'cantidad',\n    Message: 'Cuantos desea',\n    validate: function (value) {\n      var valid = !isNaN(parseFloat(value));\n      return valid || 'Please enter a number';\n    },\n    filter: Number,\n  }]).then((respuesta: any) => {\n    const menuAux = this.carta.searchMenu(respuesta.menuElegido);\n    let aux: string[] = [];\n    menuAux[0].getPlatos().forEach(function(element) {\n        aux.push(element.getNombrePlato());\n    });\n    let aux2: string[] = [];\n      this.carta.getAllPlatosSueltos().forEach(function(element) {\n      aux2.push(element.getNombrePlato());\n    });\n    inquirer.prompt([{\n      type: 'list',\n      name: 'eliminarPlatos',\n      Message: 'Plato a eliminar',\n      choices: Object.values(aux)\n    },{\n      type: 'list',\n      name: 'nuevoPlatos',\n      Message: 'Plato a añadir',\n      choices: Object.values(aux2)\n    }]).then((respuesta2: any) => {\n      const bye = menuAux[0].getPlatos().find(elemento => elemento.getNombrePlato() === respuesta2.eliminarPlatos)\n      if (bye instanceof Plato) {\n        menuAux[0].deletePlato(bye);\n      }\n      const hello = this.carta.getAllPlatosSueltos().find(elemento => elemento.getNombrePlato() === respuesta2.nuevoPlatos)\n      if(hello instanceof Plato) {\n        menuAux[0].addNuevoPlato(hello);\n      }\n      this.comanda.push(menuAux[0]);\n      console.log('Menu personalizado añadido');\n    });\n  });\n}\n\n/**\n * Prompt de Inquirer para seleccionar los menus\n */\npromptElegirMenu(){\n  let aux: string[] = [];\n  this.carta.getAllMenus().forEach(function(element) {\n    aux.push(element.getNombreMenu());\n  });\n  inquirer.prompt([{\n    type: 'list',\n    name: 'menuElegido',\n    Message: 'Menu a elegir',\n    choices: Object.values(aux)\n  },\n  {\n    type: 'input',\n    name: 'cantidad',\n    Message: 'Cuantos desea',\n    validate: function (value) {\n      var valid = !isNaN(parseFloat(value));\n      return valid || 'Please enter a number';\n    },\n    filter: Number,\n  },\n  {\n    type: 'confirm',\n    name: 'askAgain',\n    message: 'Quieres continuar añadiendo otros menus?',\n    default: true,\n  }]).then((respuesta: any) => {\n    this.sumarMenu(respuesta.menuElegido, respuesta.cantidad);\n    console.log('Añadido(s) ' + respuesta.cantidad + ' menu(s) << ' + respuesta.menuElegido + ' >>');\n    if(respuesta.askAgain){\n      this.promptElegirMenu()\n    } else {\n      this.promptSecond();\n    }\n  })\n}\n\n/**\n * Prompt de Inquirer para seleccionar los platos a elegir\n */\npromptElegirPlatos(){\n  let aux: string[] = [];\n  this.carta.getAllPlatosSueltos().forEach(function(element) {\n    aux.push(element.getNombrePlato());\n  })\n\n  inquirer.prompt([{\n    type: 'list',\n    name: 'platoElegido',\n    Message: 'Plato a elegir',\n    choices: Object.values(aux)\n  },\n  {\n    type: 'input',\n    name: 'cantidad',\n    Message: 'Cuantos desea',\n    validate: function (value) {\n      var valid = !isNaN(parseFloat(value));\n      return valid || 'Please enter a number';\n    },\n    filter: Number,\n  },\n  {\n    type: 'confirm',\n    name: 'askAgain',\n    message: 'Quieres continuar añadiendo otros platos?',\n    default: true,\n  }]).then((respuesta: any) => {\n    this.sumarPlato(respuesta.platoElegido, respuesta.cantidad);\n    console.log('Añadido(s) ' + respuesta.cantidad + ' plato(s) << ' + respuesta.platoElegido + ' >>');\n    if(respuesta.askAgain){\n      this.promptElegirPlatos()\n    } else {\n      this.promptSecond();\n    }\n  })\n}\n\n/**\n * Prompt que nos permite visualizar lo que hay\n */\npromptVisualizar(){\n  inquirer.prompt([{\n    type: 'list',\n    name: 'eleccionVisualizar',\n    Message: 'Que desea ver:',\n    choices: Object.values(optionsVisualizar)\n  }]).then((respuesta: any) => {\n    switch (respuesta[\"eleccionVisualizar\"]) {\n      case optionsVisualizar.Platos:\n        this.carta.getAllPlatosSueltos().forEach((item) => {\n          printPlato(item);\n        });\n        break;\n      case optionsVisualizar.Menus:\n        this.carta.getAllMenus().forEach((item) => {\n          printMenu(item);\n        });\n        break;\n      case optionsVisualizar.Volver:\n        this.promptComanda();\n        break;\n    }\n      inquirer.prompt({\n        type: 'confirm',\n        name: 'askAgain',\n        message: 'Quieres visualizar otros menus?',\n        default: true\n      }).then((answers: any) => {\n        if(answers.askAgain){\n          this.promptVisualizar();\n        } else {\n          this.promptComanda();\n        }\n      }) \n    \n  })\n}\n\n/**\n * Prompt que interactua y da las opciones relacionadas con la comanda\n */\npromptComanda(){\n  console.clear();\n  inquirer.prompt({\n    type: 'list',\n    name: 'respuesta',\n    message: 'Seleccione una opcion:',\n    choices: Object.values(options)\n  }).then((answers: any) => {\n\n  switch (answers[\"respuesta\"]) {\n    case options.Visualizar:\n      this.promptVisualizar(); \n      break;\n    case options.Comanda:\n      this.promptSecond()\n      break;\n    case options.Salir:\n      console.log('Gracias por su visita. Buen dia');\n      break;\n  }\n\n  }) \n}\n\n/**\n * Funcion que ejecuta el prompt de Inquirer correspondiente\n */\nrunInquirer(): void {\n  this.promptComanda();\n} \n  \n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b46c49b06821c9f951d2b2b428c61468d5495a5","contentHash":"5800ccc354ce8889177b7c26beb060514371fcb05efaa1009c9e5d10ddc54bf2"}}